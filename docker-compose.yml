services:
  postgres:
    image: postgres:16-alpine
    restart: always
    env_file: .env
    ports: 
      - "127.0.0.1:5432:5432"
    volumes:
      - type: volume
        source: cafe-db
        target: /var/lib/postgresql/data

  website:
    image: ghcr.io/chb2025/cafe_website:main
    build:
      context: .
      target: cafe_website
    restart: always
    ports:
      - "443:443"
    env_file: .env
    environment:
      DATABASE_URL: "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB"
      CARGO_MANIFEST_DIR: "/"
    volumes:
      - ./certs:/var/cafe_website/certs:Z
      - ./docker.config.toml:/var/cafe_website/config.toml:Z

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 16686:16686
      - 16687:16687
    restart: always
    environment: 
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes: 
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml:Z
    restart: always
    depends_on:
      - jaeger
    ports: 
      - 4317:4317
      - 4318:4318

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml:Z"

volumes: 
  cafe-db:
    
